name: Release

on:
  workflow_dispatch:
  push:
    tags:
    - 'v*'

permissions:
  contents: write

jobs:
  release-linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive
        persist-credentials: false
    - name: Install strip-nondeterminism
      run: sudo apt-get install strip-nondeterminism
    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22
        # 为 setup-node 动作本身也禁用缓存
        cache: 'npm' # 明确指定缓存类型，但后续步骤会覆盖
    - name: Clean cache and install without caching
      run: |
        npm config set cache $(mktemp -d)  # 设置缓存到一个临时目录，每次不同
        npm cache clean --force
        npm install --no-cache --force --loglevel=info
    - name: Fetch
      run: npm run fetch
    - name: Compile
      run: npm run webpack:prod
    - name: Package
      run: |
        node release-automation/build.js --debian --tarball --appimage --x64 --armv7l --arm64 --production
    - name: Print file tree
      run: node scripts/print-file-tree.js dist
    - name: Upload artifacts to GitHub Actions
      uses: actions/upload-artifact@v4
      with:
        name: linux
        path: |
          dist/*.deb
          dist/*.tar.gz
          dist/*.AppImage
    - name: Upload artifacts to tag
      uses: xresloader/upload-to-github-release@2bcae85344d41e21f7fc4c47fa2ed68223afdb49
      with:
        file: dist/*.deb;dist/*.tar.gz;dist/*.AppImage
        draft: false

  release-mac:
    runs-on: macos-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive
        persist-credentials: false
    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22
        cache: 'npm' # 明确指定缓存类型，但后续步骤会覆盖
    - name: Clean cache and install without caching
      run: |
        npm config set cache $(mktemp -d)  # macOS 也使用临时目录
        npm cache clean --force
        npm install --no-cache --force --loglevel=info
    - name: Fetch
      run: npm run fetch
    - name: Compile
      run: npm run webpack:prod
    - name: Package
      run: |
        node release-automation/build.js --mac --universal
        node release-automation/build.js --mac-legacy-10.13-10-14 --mac-legacy-10-15 --x64
    - name: Print file tree
      run: node scripts/print-file-tree.js dist
    - name: Upload artifacts to GitHub Actions
      uses: actions/upload-artifact@v4
      with:
        name: mac
        path: dist/*.dmg
    - name: Upload artifacts to tag
      uses: xresloader/upload-to-github-release@2bcae85344d41e21f7fc4c47fa2ed68223afdb49
      with:
        file: dist/*.dmg
        draft: false

  release-windows:
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive
        persist-credentials: false
        path: repo
    - name: "Move repository to D: drive"
      run: |
        Copy-Item -Path repo -Destination D:\repo -Recurse
        Remove-Item -Path repo -Recurse -Force
    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22
        cache: 'npm' # 明确指定缓存类型，但后续步骤会覆盖
        cache-dependency-path: '' # 确保不缓存特定路径
    - name: "Configure npm to use temporary cache on D: drive"
      run: |
        $tempCachePath = "D:\temp-npm-cache-$((Get-Random).ToString('X'))"
        npm config set cache $tempCachePath
        npm cache clean --force
    - name: Install dependencies
      working-directory: D:\repo
      run: npm install --no-cache --force --loglevel=info
    - name: Fetch
      working-directory: D:\repo
      run: npm run fetch
    - name: Compile
      working-directory: D:\repo
      run: npm run webpack:prod
    - name: Package
      working-directory: D:\repo
      run: |
        node release-automation/build.js --windows --microsoft-store --x64 --ia32 --arm64 --production
        node release-automation/build.js --windows-portable --x64 --production
        node release-automation/build.js --windows-legacy --ia32 --x64 --production
    - name: Print file tree
      working-directory: D:\repo
      run: node scripts/print-file-tree.js dist
    - name: Upload unsigned artifacts to GitHub Actions
      uses: actions/upload-artifact@v4
      with:
        name: windows-unsigned
        path: D:\repo\dist\*.exe
    - name: Upload signed artifacts to tag
      uses: xresloader/upload-to-github-release@2bcae85344d41e21f7fc4c47fa2ed68223afdb49
      with:
        file: D:\repo\dist\*.exe
        draft: false
